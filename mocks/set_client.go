// Automatically generated by MockGen. DO NOT EDIT!
// Source: flickr/sets.go

package mock_flickr

import (
	gomock "github.com/golang/mock/gomock"
	time "time"
)

// Mock of SetClient interface
type MockSetClient struct {
	ctrl     *gomock.Controller
	recorder *_MockSetClientRecorder
}

// Recorder for MockSetClient (not exported)
type _MockSetClientRecorder struct {
	mock *MockSetClient
}

func NewMockSetClient(ctrl *gomock.Controller) *MockSetClient {
	mock := &MockSetClient{ctrl: ctrl}
	mock.recorder = &_MockSetClientRecorder{mock}
	return mock
}

func (_m *MockSetClient) EXPECT() *_MockSetClientRecorder {
	return _m.recorder
}

func (_m *MockSetClient) DateOfSet(setName string) (time.Time, error) {
	ret := _m.ctrl.Call(_m, "DateOfSet", setName)
	ret0, _ := ret[0].(time.Time)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSetClientRecorder) DateOfSet(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DateOfSet", arg0)
}

func (_m *MockSetClient) AddToSet(photoId string, setName string, datePhotoTaken time.Time) error {
	ret := _m.ctrl.Call(_m, "AddToSet", photoId, setName, datePhotoTaken)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockSetClientRecorder) AddToSet(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "AddToSet", arg0, arg1, arg2)
}
